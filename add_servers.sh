#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
INVENTORY_FILE="inventory.ini"
CREATION_SCRIPT="create_containers.sh"
CLEAN_HOSTS_FILE="clean_known_hosts.yml"
FULL_DELETE_FILE="full_delete.yml"
GROUP_VARS_FILE="group_vars/all.yml"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${CYAN}"
    echo "=========================================="
    echo "   –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–û–í"
    echo "=========================================="
    echo -e "${NC}"
}

print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö† $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚Ñπ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
check_files() {
    local missing_files=()
    
    for file in "$INVENTORY_FILE" "$CREATION_SCRIPT" "$CLEAN_HOSTS_FILE" "$FULL_DELETE_FILE" "$GROUP_VARS_FILE"; do
        if [[ ! -f "$file" ]]; then
            missing_files+=("$file")
        fi
    done
    
    if [[ ${#missing_files[@]} -gt 0 ]]; then
        print_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:"
        for file in "${missing_files[@]}"; do
            echo "  - $file"
        done
        return 1
    fi
    
    print_success "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
show_current_config() {
    echo -e "${PURPLE}"
    echo "=== –¢–ï–ö–£–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==="
    echo -e "${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä—ã
    echo -e "${YELLOW}–¢–µ–∫—É—â–∏–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä—ã:${NC}"
    if [[ -f "$INVENTORY_FILE" ]]; then
        grep -A 10 "\[web_servers\]" "$INVENTORY_FILE" | grep -v "\[web_servers\]" | grep -v "^\-\-" | while read line; do
            if [[ ! -z "$line" ]]; then
                echo "  üìç $line"
            fi
        done
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    echo -e "${YELLOW}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Å–∫—Ä–∏–ø—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è:${NC}"
    if [[ -f "$CREATION_SCRIPT" ]]; then
        grep -E '\["[0-9]+"\]=' "$CREATION_SCRIPT" | while read line; do
            if [[ $line == *"ct-web"* ]]; then
                echo "  üê≥ $line"
            fi
        done
    fi
    
    echo
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ IP
get_next_ip() {
    local base_ip="192.168.104"
    
    # –ò—â–µ–º –≤—Å–µ IP –∞–¥—Ä–µ—Å–∞ –≤ inventory.ini
    local last_ip_inventory=$(grep -oP '192\.168\.104\.\K[0-9]+' "$INVENTORY_FILE" 2>/dev/null | sort -n | tail -1)
    
    # –ò—â–µ–º –≤—Å–µ IP –∞–¥—Ä–µ—Å–∞ –≤ create_containers.sh
    local last_ip_script=$(grep -oP '192\.168\.104\.\K[0-9]+' "$CREATION_SCRIPT" 2>/dev/null | sort -n | tail -1)
    
    # –ë–µ—Ä–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π IP –∏–∑ –æ–±–æ–∏—Ö —Ñ–∞–π–ª–æ–≤
    local last_ip=$(( last_ip_inventory > last_ip_script ? last_ip_inventory : last_ip_script ))
    
    if [[ -z "$last_ip" ]] || [[ "$last_ip" -lt 92 ]]; then
        last_ip=92
    fi
    
    local next_ip=$((last_ip + 1))
    echo "${base_ip}.${next_ip}"
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
get_next_id() {
    local last_id=$(grep -oP '\["\K[0-9]+(?="\]=' "$CREATION_SCRIPT" 2>/dev/null | sort -n | tail -1)
    
    if [[ -z "$last_id" ]]; then
        last_id=102
    fi
    
    local next_id=$((last_id + 1))
    echo "$next_id"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—É—â–∏—Ö –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–≤
get_web_server_count() {
    if [[ -f "$INVENTORY_FILE" ]]; then
        grep -A 20 "\[web_servers\]" "$INVENTORY_FILE" | grep -c "ct-web"
    else
        echo "0"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
add_web_server() {
    local server_name=$1
    local ip_address=$2
    local container_id=$3
    
    print_info "–î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä: $server_name ($ip_address) ID: $container_id"
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    if ! grep -q "$server_name" "$INVENTORY_FILE"; then
        # –ù–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏—é [web_servers] –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–µ–µ
        if grep -q "\[web_servers\]" "$INVENTORY_FILE"; then
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º sed –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ —Å–µ–∫—Ü–∏–∏ [web_servers]
            sed -i "/\[web_servers\]/a $server_name ansible_host=$ip_address ansible_user=root ansible_password=P@\\$\\$w0rd" "$INVENTORY_FILE"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"
        else
            print_error "–°–µ–∫—Ü–∏—è [web_servers] –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $INVENTORY_FILE"
            return 1
        fi
    else
        print_warning "–°–µ—Ä–≤–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ"
    fi
    
    # 2. –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    local container_line="    [\"$container_id\"]=\"$server_name,$ip_address,5,1,1024,512\""
    if ! grep -q "\[\"$container_id\"\]" "$CREATION_SCRIPT"; then
        # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –ø–µ—Ä–µ–¥ ct-db –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –Ω–∏–º
        if grep -q "\"ct-db" "$CREATION_SCRIPT"; then
            sed -i "/\"ct-db/ i $container_line" "$CREATION_SCRIPT"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        else
            # –ï—Å–ª–∏ ct-db –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ CONTAINERS
            sed -i "/declare -A CONTAINERS=/,/)/ { /)/ i $container_line }" "$CREATION_SCRIPT"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞)"
        fi
    else
        print_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å ID $container_id —É–∂–µ –µ—Å—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è"
    fi
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º IP –≤ clean_known_hosts.yml
    if [[ -f "$CLEAN_HOSTS_FILE" ]]; then
        if ! grep -q "$ip_address" "$CLEAN_HOSTS_FILE"; then
            sed -i "/container_ips:/a \      - $ip_address" "$CLEAN_HOSTS_FILE"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—á–∏—Å—Ç–∫–∏ known_hosts"
        fi
    else
        print_warning "–§–∞–π–ª $CLEAN_HOSTS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
    
    # 4. –î–æ–±–∞–≤–ª—è–µ–º ID –≤ full_delete.yml
    if [[ -f "$FULL_DELETE_FILE" ]]; then
        if ! grep -q "      - $container_id" "$FULL_DELETE_FILE"; then
            sed -i "/containers:/a \      - $container_id" "$FULL_DELETE_FILE"
            print_success "–î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        fi
    else
        print_warning "–§–∞–π–ª $FULL_DELETE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
auto_add_server() {
    echo -e "${CYAN}"
    echo "=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê ==="
    echo -e "${NC}"
    
    local next_id=$(get_next_id)
    local next_ip=$(get_next_ip)
    local server_count=$(get_web_server_count)
    local next_server_num=$((server_count + 1))
    local server_name="ct-web${next_server_num}"
    
    echo -e "${YELLOW}–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
    echo "  üÜî ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $next_id"
    echo "  üåê –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: $server_name"
    echo "  üì° IP –∞–¥—Ä–µ—Å: $next_ip"
    echo "  üíæ –†–µ—Å—É—Ä—Å—ã: 5 CPU, 1024MB RAM, 512MB Swap"
    
    echo
    read -p "–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä? (y/N): " confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        if add_web_server "$server_name" "$next_ip" "$next_id"; then
            print_success "–°–µ—Ä–≤–µ—Ä $server_name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é!"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞"
        fi
    else
        print_warning "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
manual_add_server() {
    echo -e "${CYAN}"
    echo "=== –†–£–ß–ù–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê ==="
    echo -e "${NC}"
    
    local next_id=$(get_next_id)
    local next_ip=$(get_next_ip)
    
    read -p "–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $next_id]: " container_id
    container_id=${container_id:-$next_id}
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞ [–Ω–∞–ø—Ä–∏–º–µ—Ä: ct-web3]: " server_name
    if [[ -z "$server_name" ]]; then
        print_error "–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!"
        return 1
    fi
    
    read -p "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $next_ip]: " ip_address
    ip_address=${ip_address:-$next_ip}
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
    if ! [[ "$container_id" =~ ^[0-9]+$ ]]; then
        print_error "ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!"
        return 1
    fi
    
    if ! [[ "$ip_address" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IP –∞–¥—Ä–µ—Å!"
        return 1
    fi
    
    echo
    echo -e "${YELLOW}–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ:${NC}"
    echo "  üÜî ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $container_id"
    echo "  üåê –ò–º—è —Å–µ—Ä–≤–µ—Ä–∞: $server_name"
    echo "  üì° IP –∞–¥—Ä–µ—Å: $ip_address"
    echo "  üíæ –†–µ—Å—É—Ä—Å—ã: 5 CPU, 1024MB RAM, 512MB Swap"
    
    echo
    read -p "–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä? (y/N): " confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        if add_web_server "$server_name" "$ip_address" "$container_id"; then
            print_success "–°–µ—Ä–≤–µ—Ä $server_name —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é!"
        else
            print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞"
        fi
    else
        print_warning "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤
bulk_add_servers() {
    echo -e "${CYAN}"
    echo "=== –ú–ê–°–°–û–í–û–ï –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–û–í ==="
    echo -e "${NC}"
    
    read -p "–°–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–æ–±–∞–≤–∏—Ç—å? " count
    
    if ! [[ "$count" =~ ^[0-9]+$ ]] || [[ "$count" -lt 1 ]]; then
        print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!"
        return 1
    fi
    
    echo
    print_warning "–ë—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ $count —Å–µ—Ä–≤–µ—Ä–æ–≤:"
    
    local current_id=$(get_next_id)
    local current_ip=$(get_next_ip)
    
    for ((i=1; i<=count; i++)); do
        local server_num=$(( $(get_web_server_count) + 1 ))
        local server_name="ct-web${server_num}"
        
        echo "  $i. $server_name - ID: $current_id - IP: $current_ip"
        
        if add_web_server "$server_name" "$current_ip" "$current_id"; then
            print_success "  ‚úì –î–æ–±–∞–≤–ª–µ–Ω"
        else
            print_error "  ‚úó –û—à–∏–±–∫–∞"
        fi
        
        current_id=$((current_id + 1))
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º IP –∞–¥—Ä–µ—Å
        local ip_part=$(echo "$current_ip" | cut -d. -f4)
        local base_ip=$(echo "$current_ip" | cut -d. -f1-3)
        ip_part=$((ip_part + 1))
        current_ip="${base_ip}.${ip_part}"
        
        sleep 1
    done
    
    print_success "–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ $count —Å–µ—Ä–≤–µ—Ä–æ–≤!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
apply_changes() {
    echo -e "${CYAN}"
    echo "=== –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô ==="
    echo -e "${NC}"
    
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "  1) –¢–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    echo "  2) –°–æ–∑–¥–∞—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  3) –ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    echo "  0) –ù–∞–∑–∞–¥"
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç [0-3]: " choice
    
    case $choice in
        1)
            print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
            ;;
        2)
            echo
            print_info "–ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
            ansible-playbook run_create_containers.yml
            echo
            print_info "–û—á–∏—Å—Ç–∫–∞ known_hosts..."
            ansible-playbook clean_known_hosts.yml
            echo
            print_info "–ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
            ansible-playbook run_playbook.yml
            ;;
        3)
            echo
            print_warning "–í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ!"
            read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm
            if [[ "$confirm" =~ ^[Yy]$ ]]; then
                echo
                print_info "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
                ansible-playbook full_delete.yml
                echo
                print_info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
                ansible-playbook run_create_containers.yml
                echo
                print_info "–û—á–∏—Å—Ç–∫–∞ known_hosts..."
                ansible-playbook clean_known_hosts.yml
                echo
                print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞..."
                ansible-playbook run_playbook.yml
            else
                print_warning "–ü–µ—Ä–µ—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
            fi
            ;;
        0)
            return
            ;;
        *)
            print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        print_header
        show_current_config
        
        echo -e "${GREEN}–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ:${NC}"
        echo "  1) üîç –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo "  2) ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
        echo "  3) ‚úçÔ∏è  –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  4) üì¶ –ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤"
        echo "  5) üöÄ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
        echo "  6) üßπ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤"
        echo "  0) ‚ùå –í—ã—Ö–æ–¥"
        echo
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [0-6]: " choice
        
        case $choice in
            1)
                show_current_config
                ;;
            2)
                auto_add_server
                ;;
            3)
                manual_add_server
                ;;
            4)
                bulk_add_servers
                ;;
            5)
                apply_changes
                ;;
            6)
                check_files
                ;;
            0)
                echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!"
                ;;
        esac
        
        echo
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        clear
    done
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
clear
if check_files; then
    main_menu
else
    print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤."
    exit 1
fi
